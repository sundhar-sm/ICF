package com.oneapp.icf.assignment.config;
import java.util.Properties;

import javax.sql.DataSource;

import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBean;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
public class HibernateConfiguration {

	
	//@Value("${db.driver}")
	private String DRIVER="com.sap.db.jdbc.Driver";
	 
		//@Value("${db.password}")
		//private String PASSWORD="Lo5qKRWkp3ALmA.Ax.NeGQutS-NQPCmlJXXpeUQ6UW1tZ4rw3hPGMfw1pWUCSF.nlBNhI3225VgRpECq---u-FzHwW3pesqK_7T7M2HUWrX1ATc.cptM6QhBw8pTFqlI";
		
	 
		//@Value("${db.url}")
		//private String URL="jdbc:sap://zeus.hana.prod.eu-central-1.whitney.dbaas.ondemand.com:24458?encrypt=true&validateCertificate=true&currentschema=WORKBOX_UBP";
	 
		//@Value("${db.username}")
		//private String USERNAME="DEV_DB";
	 
		//@Value("${hibernate.dialect}")
		private String DIALECT="org.hibernate.dialect.PostgreSQL9Dialect";
		//private String DIALECT="org.hibernate.dialect.HANAColumnStoreDialect";
	 
		//@Value("${hibernate.show_sql}")
		private String SHOW_SQL="true";
	 
		//@Value("${hibernate.hbm2ddl.auto}")
		private String HBM2DDL_AUTO="update";
	 
		//@Value("${entitymanager.packagesToScan}")
		private String PACKAGES_TO_SCAN="oneapp.incture.workbox.demo";
 
	@Bean
	public DataSource dataSource() {
		
		JSONObject obj = new JSONObject(System.getenv("VCAP_SERVICES"));
		JSONArray arr = obj.getJSONArray("postgresql-db");
		String dbname = arr.getJSONObject(0).getJSONObject("credentials").getString("dbname");
		String hostname = arr.getJSONObject(0).getJSONObject("credentials").getString("hostname");
		String port = arr.getJSONObject(0).getJSONObject("credentials").getString("port");
		String username = arr.getJSONObject(0).getJSONObject("credentials").getString("username");
		String password = arr.getJSONObject(0).getJSONObject("credentials").getString("password");
		
		String connection_url = "jdbc:postgresql://" + hostname + ":" + port + "/" + dbname;
//		String connection_url = "jdbc:postgresql://localhost:5432/postgres";
		DriverManagerDataSource dataSource = new DriverManagerDataSource();
		
		dataSource.setUrl(connection_url);
		 dataSource.setUsername(username);
		 dataSource.setPassword(password);
//		 dataSource.setUsername("postgres");
//		 dataSource.setPassword("workbox@123");
		 
		 try {
				System.err.println("HibernateConfiguration.dataSource()"+ dataSource.getConnection());
				 }catch(Exception e) {
					System.err.println("HibernateConfiguration.dataSource() "+e); 
					e.printStackTrace();
				 }
		 
		return dataSource;
	}
 
//	@Bean
//	public DataSource dataSource() {
//		DriverManagerDataSource dataSource = new DriverManagerDataSource();
//		dataSource.setDriverClassName(DRIVER);
//		dataSource.setUrl(URL);
//		dataSource.setUsername(USERNAME);
//		dataSource.setPassword(PASSWORD);
//		return dataSource;
//	}
	
	@Bean
	public LocalSessionFactoryBean sessionFactory() {
	
		LocalSessionFactoryBean sessionFactory = new LocalSessionFactoryBean();
		sessionFactory.setDataSource(dataSource());
		sessionFactory.setPackagesToScan(PACKAGES_TO_SCAN);
		Properties hibernateProperties = new Properties();
		hibernateProperties.put("hibernate.dialect", DIALECT);
		hibernateProperties.put("hibernate.show_sql", SHOW_SQL);
		hibernateProperties.put("hibernate.hbm2ddl.auto", HBM2DDL_AUTO);
		sessionFactory.setHibernateProperties(hibernateProperties);
 
		return sessionFactory;
	}
 
	@Bean
	public HibernateTransactionManager transactionManager() {
		HibernateTransactionManager transactionManager = new HibernateTransactionManager();
		transactionManager.setSessionFactory(sessionFactory().getObject());
		return transactionManager;
	}	
}